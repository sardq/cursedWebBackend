plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

defaultTasks 'bootRun'

jar {
    enabled = false
}

bootJar {
    archiveFileName = String.format('%s-%s.jar', rootProject.name, version)
}

assert System.properties['java.specification.version'] == '17' || '21'
java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.minio:minio:8.4.3'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    implementation 'org.projectlombok:lombok:1.18.30'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'org.postgresql:postgresql:42.7.3'

    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'com.auth0:java-jwt:4.4.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
